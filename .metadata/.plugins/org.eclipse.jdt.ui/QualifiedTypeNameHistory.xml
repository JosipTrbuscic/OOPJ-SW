<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.collections.LinkedListIndexCollection"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.collections.LinkedListIndexCollection.ListNode"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="java.lang.Runtime"/>
    <fullyQualifiedTypeName name="java.lang.Throwable"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.collections.ObjectStack"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.collections.EmptyStackException"/>
    <fullyQualifiedTypeName name="java.lang.Comparable"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="java.lang.NumberFormatException"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.hw02.ComplexNumber"/>
    <fullyQualifiedTypeName name="org.junit.Before"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.collections.ArrayIndexedCollection"/>
    <fullyQualifiedTypeName name="java.lang.UnsupportedOperationException"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.hw03.prob1.Lexer"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.hw03.prob1.LexerException"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.hw03.prob1.LexerState"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.hw03.prob1.Token"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.nodes.ObjectStack"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.hw03.prob1.TokenType"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.util.regex.Pattern"/>
    <fullyQualifiedTypeName name="java.util.regex.Matcher"/>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.lexer.LexerException"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.lexer.Token"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.elems.ElementString"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.lexer.LexerState"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.lexer.Lexer"/>
    <fullyQualifiedTypeName name="java.util.EmptyStackException"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="java.lang.IndexOutOfBoundsException"/>
    <fullyQualifiedTypeName name="javax.lang.model.util.Elements"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.nodes.ArrayIndexedCollection"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.lexer.TokenType"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.elems.ElementOperator"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.elems.ElementConstantInteger"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.elems.ElementFunction"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.elems.ElementConstantDouble"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.elems.ElementVariable"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.parser.SmartScriptParser"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.nodes.DocumentNode"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.parser.SmartScriptParserException"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.nodes.Node"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.nodes.TextNode"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.nodes.ForLoopNode"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.nodes.EchoNode"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="hr.fer.zemris.java.custom.scripting.elems.Element"/>
    <fullyQualifiedTypeName name="java.io.ByteArrayOutputStream"/>
    <fullyQualifiedTypeName name="java.io.InputStream"/>
    <fullyQualifiedTypeName name="java.nio.charset.StandardCharsets"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
</qualifiedTypeNameHistroy>
